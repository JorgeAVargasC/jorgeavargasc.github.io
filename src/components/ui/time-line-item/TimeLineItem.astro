---
import ExternalLinkIcon from '../icons/ExternalLinkIcon.astro'

interface Props {
	from: string | null
	to: string | null
	title: string
	subtitle?: string
	link?: string | null
	linkLabel?: string | null
}

const { from, title, to, link, linkLabel, subtitle } = Astro.props

const f = new Intl.DateTimeFormat('en', {
	year: 'numeric',
	month: 'short',
	day: 'numeric'
})

const getDateLabel = () => {
	if (from && to) {
		const fromDate = new Date(from)
		const toDate = new Date(to)
		return `${f.format(fromDate)} - ${f.format(toDate)}`
	}

	if (from) {
		const fromDate = new Date(from)
		return `${f.format(fromDate)} - Present`
	}

	if (to) {
		const toDate = new Date(to)
		return `${f.format(toDate)}`
	}

	return ''
}
---

<div class='flex gap-x-2'>
	<div
		class='after:bg-secondary-foreground relative after:absolute after:start-3.5 after:top-7 after:bottom-0 after:w-px after:-translate-x-[0.5px] last:after:hidden'
	>
		<div class='relative z-10 flex size-7 items-center justify-center'>
			<div class='bg-secondary-foreground size-2 rounded-full'></div>
		</div>
	</div>

	<div class='grid gap-1 pb-6'>
		<h3 class='text-secondary-foreground flex h-7 items-center leading-none'>
			{getDateLabel()}
		</h3>

		<div class='flex items-start gap-x-0.5'>
			<div class='grid min-w-5 min-h-5 place-items-center'>
				<slot name='icon' />
			</div>
			<h4>
				{title}
			</h4>
		</div>
		{
			subtitle && (
				<p class='text-secondary-foreground text-justify text-sm'>{subtitle}</p>
			)
		}

		{
			link && linkLabel && (
				<a
					href={link}
					target='_blank'
					rel='noopener noreferrer'
				>
					<button class='btn btn-outline'>
						<div class='grid'>
							<small class='truncate'>{linkLabel}</small>
						</div>
						<ExternalLinkIcon />
					</button>
				</a>
			)
		}
	</div>
</div>
